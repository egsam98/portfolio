// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/portfolios/:name/data": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Portfolios"
                ],
                "summary": "Portfolio data",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Portfolio name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/portfolio.Info"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        },
        "/portfolios/:name/triggers": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Portfolios"
                ],
                "summary": "Add trigger to portfolio",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Portfolio name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": " ",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "required": [
                                    "currency",
                                    "type"
                                ],
                                "properties": {
                                    "currency": {
                                        "type": "string",
                                        "enum": [
                                            "USDT",
                                            "BTC"
                                        ]
                                    },
                                    "limit": {
                                        "type": "number"
                                    },
                                    "percent": {
                                        "type": "number"
                                    },
                                    "trailing_alert": {
                                        "type": "boolean"
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "COST_REACHED_LIMIT",
                                            "COST_CHANGED_BY_PERCENT"
                                        ]
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/portfolio.TriggerSettings"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/echo.HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "echo.HTTPError": {
            "type": "object",
            "properties": {
                "message": {}
            }
        },
        "portfolio.ConvertedTo": {
            "type": "object",
            "additionalProperties": {
                "type": "number"
            }
        },
        "portfolio.Data": {
            "type": "object",
            "required": [
                "prices"
            ],
            "properties": {
                "balance": {
                    "type": "object",
                    "required": [
                        "details",
                        "total"
                    ],
                    "properties": {
                        "details": {
                            "type": "object",
                            "additionalProperties": {
                                "$ref": "#/definitions/portfolio.ConvertedTo"
                            }
                        },
                        "total": {
                            "$ref": "#/definitions/portfolio.ConvertedTo"
                        }
                    }
                },
                "prices": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/portfolio.ConvertedTo"
                    }
                }
            }
        },
        "portfolio.Info": {
            "type": "object",
            "required": [
                "data",
                "trigger_settings"
            ],
            "properties": {
                "data": {
                    "$ref": "#/definitions/portfolio.Data"
                },
                "trigger_settings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/portfolio.TriggerSettings"
                    }
                }
            }
        },
        "portfolio.TriggerSettings": {
            "type": "object",
            "required": [
                "created_at",
                "currency",
                "id",
                "type"
            ],
            "properties": {
                "created_at": {
                    "type": "integer",
                    "format": "timestamp",
                    "example": 1654586492
                },
                "currency": {
                    "type": "string",
                    "enum": [
                        "USDT",
                        "BTC"
                    ]
                },
                "id": {
                    "type": "string",
                    "format": "UUID",
                    "example": "e1c6c253-00cd-4562-ae5c-ce065f8530c6"
                },
                "limit": {
                    "type": "number"
                },
                "percent": {
                    "type": "number"
                },
                "start_total_cost": {
                    "type": "number"
                },
                "trailing_alert": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "COST_REACHED_LIMIT",
                        "COST_CHANGED_BY_PERCENT"
                    ]
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
